@page "/seguimiento/{id}"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject NavigationManager Navigation
@inject HttpClient httpClient

@code {
    [Parameter]
    public string id { get; set; }

    private Seguimient newSeguiment;
    private List<Order> orders;
    private Order order;
    private string fechaI;
    private string fechaF;


    protected override async Task OnInitializedAsync()
    {
        newSeguiment = new Seguimient();
        orders = new List<Order>();
        order = new Order();

        var httpClient = new HttpClient();
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "path");
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Servicios");
        //desarrollo
        var response = await httpClient.GetAsync($"{path}/Seguimiento/" + id);

        if (response.IsSuccessStatusCode)
        {
            SeguimientData data;
            var content = await response.Content.ReadAsStringAsync();
            Console.WriteLine(content);
            data = JsonConvert.DeserializeObject<SeguimientData>(content);
            newSeguiment = data.data;
            Console.WriteLine("Todo bien" + newSeguiment.Id + newSeguiment.OrdenDeTrabajoId);
        }
        else
        {

        }

        var httpClientOrder = new HttpClient();
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Servicios");
        //desarrollo
        var responseOrder = await httpClientOrder.GetAsync($"{path}/OrdenDeTrabajo/" + newSeguiment.OrdenDeTrabajoId);

        if (responseOrder.IsSuccessStatusCode)
        {
            var contentOrder = await responseOrder.Content.ReadAsStringAsync();
            Console.WriteLine(contentOrder);
            order = JsonConvert.DeserializeObject<Order>(contentOrder);
            fechaI = DateTime.Parse(order.FechaInicio).ToString() ?? "";
            fechaF = DateTime.Parse(order.FechaFin).ToString() ?? "";
        }
        else
        {

        }
    }
}
<h3 class="cotizacion-title">Seguimiento</h3>
<form class="cotizacion-form" onsubmit="@goBack">
        <div>
            <label for="orden">Orden:</label>
        <select id="orden" name="orden" @onchange="@((e) => handleChange(e,"orden"))" >
                @if (order != null)
                {
                    <option value="@order.Id">@order.Id</option>
                }
            </select>
        </div>
        <div>
            <label for="avance">Avance:</label>
        <input type="number" id="avance" name="avance" value="@newSeguiment.Avance" @onchange="@((e) => handleChange(e,"avance"))" readonly />
        </div>
        <div>
        <label for="observaciones">Observaciones:</label>
        <input type="text" id="observaciones" name="observaciones" value="@newSeguiment.Observaciones" @onchange="@((e) => handleChange(e,"observaciones"))" readonly />
        </div>
    <div>
        <label for="operario">Operario:</label>
        <input type="text" id="operario" name="operario" value="@order.NombreOperario" @onchange="@((e) => handleChange(e,"operario"))" readonly />
    </div>
    <div>
        <label for="fechainicio">Fecha inicio:</label>
        <input type="text" id="fechainicio" name="fechainicio" value="@fechaI" @onchange="@((e) => handleChange(e,"fechainicio"))" readonly />
    </div>
    <div>
        <label for="fechafin">Fecha fin:</label>
        <input type="text" id="fechafin" name="fechafin" value="@fechaF" @onchange="@((e) => handleChange(e,"fechafin"))" readonly />
    </div>

        <button type="submit" >Guardar Seguimiento</button>
    </form>





@code {
    [Inject]
    public IJSRuntime JSRuntime { get; set; }

    public class Order
    {
        public int Id { get; set; }
        public int CotizacionId { get; set; }
        public string OperarioId { get; set; }
        public string NombreOperario { get; set; }
        public string FechaInicio { get; set; }
        public string FechaFin { get; set; }
        public int EstadoId { get; set; }
    }

    public class Seguimient
    {
        public int Id { get; set; }
        public int OrdenDeTrabajoId { get; set; }
        public string Fecha { get; set; }
        public int Avance { get; set; }
        public string Observaciones { get; set; }
    }

    public class SeguimientData
    {
        public Seguimient data { get; set; }
    }

    public void handleChange(ChangeEventArgs e, string name)
    {
        if (name == "orden")
        {
            string inputValue = e.Value.ToString();
            newSeguiment.OrdenDeTrabajoId = Int32.Parse(inputValue);
            Console.WriteLine("Cambio el valor " + newSeguiment.OrdenDeTrabajoId);
        }

        if (name == "avance")
        {
            string inputValue = e.Value.ToString();
            newSeguiment.Avance = Int32.Parse(inputValue);
            Console.WriteLine("Cambio el valor " + newSeguiment.Avance);

        }

        if (name == "observaciones")
        {
            string inputValue = e.Value.ToString();
            newSeguiment.Observaciones = inputValue;
            Console.WriteLine("Cambio el valor " + newSeguiment.Observaciones);
        }
        StateHasChanged();
    }

    private async Task goBack()
    {
        Navigation.NavigateToLogin("/seguimientos");
    }
}
