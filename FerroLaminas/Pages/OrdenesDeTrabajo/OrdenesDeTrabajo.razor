@page "/ordenes"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject HttpClient httpClient
@code {
    private List<Order> orders;
    private List<Order> ordersPendientes;
    private List<Cotization> contizations;


    public class Rol
    {
        public int? Id { get; set; }
        public string Nombre { get; set; }
    }

    public class User
    {
        public string email { get; set; }
        public string nombre { get; set; }
        public int IdUsuario { get; set; }
    }

    private Rol rol;
    private User user;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "path");
        var response_rol = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "UserRol");
        var response_user = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "User");
        rol = JsonConvert.DeserializeObject<Rol>(response_rol);
        user = JsonConvert.DeserializeObject<User>(response_user);
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Cotizaciones");
        //desarrollo
        var response = await httpClient.GetAsync($"{path}/Cotizaciones");

        if (response.IsSuccessStatusCode)
        {
            Console.Write("User Mail" + user.email);
            var content = await response.Content.ReadAsStringAsync();
            contizations = JsonConvert.DeserializeObject<List<Cotization>>(content);
            List<Cotization> filteredItemsUser = new List<Cotization>();
            foreach (var contization in contizations)
            {
                if (contization.UsuarioId == user.IdUsuario)
                {
                    filteredItemsUser.Add(contization);
                }
            }
            if (rol.Nombre != "Administrador del sistema")
            {
                contizations = filteredItemsUser;
            }
        }
        else
        {

        }

        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Cotizaciones");
        //desarrollo
        var responseOrder = await httpClient.GetAsync($"{path}/OrdenDeTrabajo");

        if (response.IsSuccessStatusCode)
        {
            var content = await responseOrder.Content.ReadAsStringAsync();
            orders = JsonConvert.DeserializeObject<List<Order>>(content);
            List<Order> filteredItems = new List<Order>();
            List<Order> filteredItemsPendientes = new List<Order>();
            List<Order> filteredItemsForUser = new List<Order>();
            foreach (var order in orders)
            {
                foreach (var cotization in contizations)
                {
                    if (order.CotizacionId == cotization.Id)
                    {
                        filteredItemsForUser.Add(order);
                    }
                }
            }
            orders = filteredItemsForUser;
            foreach (var order in orders)
            {
                if (order.EstadoId != 1)
                {
                    filteredItems.Add(order);
                } else
                {
                    filteredItemsPendientes.Add(order);
                }
            }
            orders = filteredItems;
            ordersPendientes = filteredItemsPendientes;
        }
        else
        {

        }
    }
}

<PageTitle>Ferro Laminas</PageTitle>

<h3 class="order-title">Ordenes de Trabajo</h3>

@if (orders != null)
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Cotizacion Id</th>
                <th>Operario Id</th>
                <th>Nombre Operario</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
                <th>Detalles</th>
                @if (rol.Nombre == "Administrador del sistema")
                {
                    <th>Editar</th>
                    <th>Eliminar</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr class="order-table-body">
                    <td>@order.Id</td>
                    <td>@order.CotizacionId</td>
                    <td>@order.OperarioId</td>
                    <td>@order.NombreOperario</td>
                    <td>@order.FechaInicio</td>
                    <td>@order.FechaFin</td>
                    <td>@order.Estado</td>
                    <td><a href="/ordenes/detalles/@order.Id">Ver</a></td>
                    @if (rol.Nombre == "Administrador del sistema")
                    {
                        <td><a href="/ordenes/@order.Id">Editar</a></td>
                        <td><a href="/ordenes" @onclick="@(() => DeleteCotitation(order.Id))">Eliminar</a></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Cotizacion Id</th>
                <th>Operario Id</th>
                <th>Nombre Operario</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            <tr class="order-table-body">
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
            </tr>
        </tbody>
    </table>
}


@if (ordersPendientes != null)
{
<h3 class="order-title">Ordenes de Trabajo Pendientes</h3>
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Cotizacion Id</th>
                <th>Operario Id</th>
                <th>Nombre Operario</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
                <th>Detalles</th>
                @if (rol.Nombre == "Administrador del sistema")
                {
                    <th>Editar</th>
                    <th>Eliminar</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var order in ordersPendientes)
            {
                <tr class="order-table-body">
                    <td>@order.Id</td>
                    <td>@order.CotizacionId</td>
                    <td>@order.OperarioId</td>
                    <td>@order.NombreOperario</td>
                    <td>@order.FechaInicio</td>
                    <td>@order.FechaFin</td>
                    <td>@order.Estado</td>
                    <td><a href="/ordenes/detalles/@order.Id">Ver</a></td>
                    @if (rol.Nombre == "Administrador del sistema")
                    {
                        <td><a href="/ordenes/@order.Id">Editar</a></td>
                        <td><a href="/ordenes" @onclick="@(() => DeleteCotitation(order.Id))">Eliminar</a></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@* @if (rol != null && rol.Nombre == "Administrador del sistema")
{
    <button class="order-submit" type="button" onclick="@redirectOrder">Nueva Orden</button>
} *@

@code {
    public class Cotization
    {
        public int Id { get; set; }
        public int ClienteId { get; set; }
        public int ProyectoId { get; set; }
        public int MaterialId { get; set; }
        public int ServicioId { get; set; }
        public double PrecioTotal { get; set; }
        public double PesoLamina { get; set; }
        public double PrecioMaterial { get; set; }
        public double PrecioServicio { get; set; }
        public int UsuarioId { get; set; }
        public bool CotizacionFinalizada { get; set; }
    }

    public class Order
    {
        public int Id { get; set; }
        public int CotizacionId { get; set; }
        public string OperarioId { get; set; }
        public string NombreOperario { get; set; }
        public string FechaInicio { get; set; }
        public string FechaFin { get; set; }
        public int EstadoId { get; set; }
        public string Estado { get; set; }
    }

    private string logoClass { get; set; }
    private string logoTextClass { get; set; }
    private string formClass { get; set; }
    private Timer timer { get; set; }

    // protected override void OnInitialized()
    // {
    //     logoClass = "logo-rotation";
    //     logoTextClass = "logo-text";
    //     formClass = "form-login-hiden";
    //     timer = new Timer(EjecutarTimeout, null, 2000, Timeout.Infinite);
    // }

    private async Task DeleteCotitation(int _id)
    {
        var httpClient = new HttpClient();
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "path");
        //produccion
        //var response = await httpClient.DeleteAsync("https://apiferrolaminas.azurewebsites.net/api/Materiales/" + _id);
        //desarrollo
        var response = await httpClient.DeleteAsync($"{path}/OrdenDeTrabajo/" + _id);

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
        else
        {
        }
        StateHasChanged();
    }

    private void redirectOrder()
    {
        Navigation.NavigateToLogin("/orden");
    }

    // private void EjecutarTimeout(object state)
    // {
    //     logoClass = "logo";
    //     logoTextClass = "logo-text-hiden";
    //     formClass = "form-login";
    //     StateHasChanged();
    // }
}
