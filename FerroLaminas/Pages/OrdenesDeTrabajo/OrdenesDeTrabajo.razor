@page "/ordenes"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject NavigationManager Navigation
@inject HttpClient httpClient
@code {
    private List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Cotizaciones");
        //desarrollo
        var response = await httpClient.GetAsync("https://localhost:7263/api/OrdenDeTrabajo");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            orders = JsonConvert.DeserializeObject<List<Order>>(content);
        }
        else
        {

        }
    }
}

<PageTitle>Ferro Laminas</PageTitle>

<h3 class="order-title">Ordenes de Trabajo</h3>

@if (orders != null)
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Cotizacion Id</th>
                <th>Operario Id</th>
                <th>Nombre Operario</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
                <th>Editar</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr class="order-table-body">
                    <td>@order.Id</td>
                    <td>@order.CotizacionId</td>
                    <td>@order.OperarioId</td>
                    <td>@order.NombreOperario</td>
                    <td>@order.FechaInicio</td>
                    <td>@order.FechaFin</td>
                    <td>@order.EstadoId</td>
                    <td><a href="/ordenes/@order.Id">Editar</a></td>
                    <td><a href="/ordenes" @onclick="@(() => DeleteCotitation(order.Id))">Eliminar</a></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Cotizacion Id</th>
                <th>Operario Id</th>
                <th>Nombre Operario</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            <tr class="order-table-body">
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
            </tr>
        </tbody>
    </table>
}

<button class="order-submit" type="button" onclick="@redirectOrder">Nuevo Material</button>

@code {
    public class Order
    {
        public int Id { get; set; }
        public int CotizacionId { get; set; }
        public string OperarioId { get; set; }
        public string NombreOperario { get; set; }
        public string FechaInicio { get; set; }
        public string FechaFin { get; set; }
        public int EstadoId { get; set; }
    }

    private string logoClass { get; set; }
    private string logoTextClass { get; set; }
    private string formClass { get; set; }
    private Timer timer { get; set; }

    // protected override void OnInitialized()
    // {
    //     logoClass = "logo-rotation";
    //     logoTextClass = "logo-text";
    //     formClass = "form-login-hiden";
    //     timer = new Timer(EjecutarTimeout, null, 2000, Timeout.Infinite);
    // }

    private async Task DeleteCotitation(int _id)
    {
        var httpClient = new HttpClient();
        //produccion
        //var response = await httpClient.DeleteAsync("https://apiferrolaminas.azurewebsites.net/api/Materiales/" + _id);
        //desarrollo
        var response = await httpClient.DeleteAsync("https://localhost:7263/api/OrdenDeTrabajo/" + _id);

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
        else
        {
        }
        StateHasChanged();
    }

    private void redirectOrder()
    {
        Navigation.NavigateToLogin("/orden");
    }

    // private void EjecutarTimeout(object state)
    // {
    //     logoClass = "logo";
    //     logoTextClass = "logo-text-hiden";
    //     formClass = "form-login";
    //     StateHasChanged();
    // }
}
