@page "/materiales"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject HttpClient httpClient

@code {
    private List<Material> materials;

    public class Rol
    {
        public int? Id { get; set; }
        public string Nombre { get; set; }
    }

    private Rol rol;


    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "path");
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/Materiales");
        //desarrollo
        // var response = await httpClient.GetAsync($"https://localhost:7263/api/Materiales");
        var response = await httpClient.GetAsync($"{path}/Materiales");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            materials = JsonConvert.DeserializeObject<List<Material>>(content);
            var response_rol = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "UserRol");
            rol = JsonConvert.DeserializeObject<Rol>(response_rol);
        }
        else
        {
            
        }
    }
}

<PageTitle>Ferro Laminas</PageTitle>

<h3 class="order-title">Materiales</h3>

@if (materials != null && rol != null)
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Tipo</th>
                <th>Precio por Kilo</th>
                <th>Stock en Kilos</th>
                <th>Descripción</th>
                @if (rol.Nombre == "Administrador del sistema")
                {
                    <th>Editar</th>
                    <th>Eliminar</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var material in materials)
            {
                <tr class="order-table-body">
                    <td>@material.Id</td>
                    <td>@material.Tipo</td>
                    <td>@material.PrecioPorKilo</td>
                    <td>@material.StockKilos</td>
                    <td>@material.Descripcion</td>
                    @if (rol.Nombre == "Administrador del sistema")
                    {
                        <td><a href="/materiales/@material.Id">Editar</a></td>
                        <td><a href="/materiales" @onclick="@(() => DeleteMaterial(material.Id))">Eliminar</a></td>                        
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Tipo</th>
                <th>Precio por Kilo</th>
                <th>Stock en Kilos</th>
                <th>Descripción</th>
            </tr>
        </thead>
        <tbody>
            <tr class="order-table-body">
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>

            </tr>
        </tbody>
    </table>
}
@if (rol != null && rol.Nombre == "Administrador del sistema")
{
    <button class="order-submit" type="button" @onclick="CrearMaterial">Nuevo Material</button>
}

@code {

    public class Material
    {
        public int Id { get; set; }
        public string Tipo { get; set; }
        public double PrecioPorKilo { get; set; }
        public double StockKilos { get; set; }
        public string Descripcion { get; set; }
    }

    public class MaterialData
    {
        public List<Material> Values { get; set; }
    }

    private string logoClass { get; set; }
    private string logoTextClass { get; set; }
    private string formClass { get; set; }
    private Timer timer { get; set; }

    // protected override void OnInitialized()
    // {
    //     logoClass = "logo-rotation";
    //     logoTextClass = "logo-text";
    //     formClass = "form-login-hiden";
    //     timer = new Timer(EjecutarTimeout, null, 2000, Timeout.Infinite);
    // }

    private async Task CrearMaterial()
    {
        Material nuevoMaterial = new Material();
        nuevoMaterial.Id = 8;
        nuevoMaterial.Tipo = "Material prueba";
        nuevoMaterial.PrecioPorKilo = 70;
        nuevoMaterial.StockKilos = 80;
        nuevoMaterial.Descripcion = "Este es un nuevo material";
        var httpClient = new HttpClient();
        var content = new StringContent(JsonConvert.SerializeObject(nuevoMaterial), Encoding.UTF8, "application/json");
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "path");
        //produccion
        //var response = await httpClient.PostAsync("https://apiferrolaminas.azurewebsites.net/api/Materiales", content);
        //desarrollo
        var response = await httpClient.PostAsync($"{path}https://localhost:7263/api/Materiales", content);

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
        else
        {
        }
        StateHasChanged();
    }

    private async Task DeleteMaterial(int _id)
    {
        var httpClient = new HttpClient();
        var path = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "UserRol");
        //produccion
        //var response = await httpClient.DeleteAsync("https://apiferrolaminas.azurewebsites.net/api/Materiales/" + _id);
        //desarrollo
        var response = await httpClient.DeleteAsync($"{path}/Materiales/" + _id);

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
        else
        {
        }
        StateHasChanged();
    }

    // private void EjecutarTimeout(object state)
    // {
    //     logoClass = "logo";
    //     logoTextClass = "logo-text-hiden";
    //     formClass = "form-login";
    //     StateHasChanged();
    // }
}
