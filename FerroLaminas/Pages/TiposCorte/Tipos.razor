@page "/tipos-corte"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject NavigationManager Navigation
@inject HttpClient httpClient

@code {
    private List<Type> types;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        var response = await httpClient.GetAsync("https://localhost:7263/api/TipoCorte");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            types = JsonConvert.DeserializeObject<List<Type>>(content);
        }
        else
        {
            
        }
    }
}

<PageTitle>Ferro Laminas</PageTitle>

<h3 class="order-title">Tipos</h3>

@if (types != null)
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Nombre</th>
                <th>Precio por Kilo</th>
                <th>Descripción</th>
                <th>Servico id</th>
                <th>Editar</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var type in types)
            {
                <tr class="order-table-body">
                    <td>@type.Id</td>
                    <td>@type.Nombre</td>
                    <td>@type.PrecioPorKilo</td>
                    <td>@type.Descripcion</td>
                    <td>@type.ServicioId</td>
                    <td><a href="/tipos-corte/@type.Id">Editar</a></td>
                    <td><a href="/tipos-corte" @onclick="@(() => DeleteType(type.Id))">Eliminar</a></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <table class="order-table table">
        <thead>
            <tr class="order-table-head">
                <th>ID</th>
                <th>Tipo</th>
                <th>Precio por Kilo</th>
                <th>Stock en Kilos</th>
                <th>Descripción</th>
            </tr>
        </thead>
        <tbody>
            <tr class="order-table-body">
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>
                <td>...</td>

            </tr>
        </tbody>
    </table>
}

<button class="order-submit" type="button" @onclick="CrearType">Nuevo Tipo</button>

@code {
    public class Type
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public decimal PrecioPorKilo { get; set; }
        public string Descripcion { get; set; }
        public int ServicioId { get; set; }
    }

    public class TypeData
    {
        public List<Type> Values { get; set; }
    }

    private string logoClass { get; set; }
    private string logoTextClass { get; set; }
    private string formClass { get; set; }
    private Timer timer { get; set; }

    protected override void OnInitialized()
    {
        logoClass = "logo-rotation";
        logoTextClass = "logo-text";
        formClass = "form-login-hiden";
        timer = new Timer(EjecutarTimeout, null, 2000, Timeout.Infinite);
    }

    private async Task CrearType()
    {
        Type nuevoType = new Type();
        nuevoType.Id = 8;
        nuevoType.Nombre = "Tipo prueba";
        nuevoType.PrecioPorKilo = 70;
        nuevoType.Descripcion = "Este es un nuevo tipo";
        nuevoType.ServicioId = 7;
        var httpClient = new HttpClient();
        var content = new StringContent(JsonConvert.SerializeObject(nuevoType), Encoding.UTF8, "application/json");
        var response = await httpClient.PostAsync("https://localhost:7263/api/TipoCorte", content);

        if (response.IsSuccessStatusCode)
        {
            // El material se creó exitosamente, puedes realizar alguna acción, como redirigir a otra página
        }
        else
        {
        }
        StateHasChanged();
    }

    private async Task DeleteType(int _id)
    {
        var httpClient = new HttpClient();
        var response = await httpClient.DeleteAsync("https://localhost:7263/api/TipoCorte/" + _id);

        if (response.IsSuccessStatusCode)
        {
            // El material se creó exitosamente, puedes realizar alguna acción, como redirigir a otra página
        }
        else
        {
        }
        StateHasChanged();
    }

    private void EjecutarTimeout(object state)
    {
        logoClass = "logo";
        logoTextClass = "logo-text-hiden";
        formClass = "form-login";
        StateHasChanged();
    }
}
