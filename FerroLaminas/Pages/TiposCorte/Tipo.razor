@page "/tipos-corte/{id}"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http
@using static FerroLaminas.Pages.FetchData
@using Newtonsoft.Json;
@using System.Text
@inject NavigationManager Navigation
@inject HttpClient httpClient

@code {
    [Parameter]
    public string id { get; set; }

    private Typee type;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();
        //produccion
        //var response = await httpClient.GetAsync("https://apiferrolaminas.azurewebsites.net/api/TipoCorte/" + id);
        //desarrollo
        var response = await httpClient.GetAsync("https://localhost:7263/api/TipoCorte/" + id);

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            type = JsonConvert.DeserializeObject<Typee>(content);
        }
        else
        {
            type = new Typee();
        }
    }
}

@if (type != null)
{
    <h3 class="cotizacion-title">Tipo</h3>

    <form class="cotizacion-form">
        <div>
            <label for="nombre2">Nombre:</label>
            <input type="text" id="nombre2" name="nombre2" value="@type.Nombre" @onchange="@((e) => handleChange(e,"nombre"))" />
        </div>
        <div>
            <label for="precioporkilo3">Precio por kilo:</label>
            <input type="number" id="precioporkilo3" name="precioporkilo3" value="@type.PrecioPorKilo" @onchange="@((e) => handleChange(e,"precioporkilo3"))" />
        </div>
        <div>
            <label for="descripcion3">Descripción:</label>
            <input type="text" id="descripcion3" name="descripcion3" value="@type.Descripcion" @onchange="@((e) => handleChange(e,"descripcion3"))" />
        </div>
        <div>
            <label for="servicioid">Servicio id:</label>
            <input type="number" id="servicioid" name="servicioid" value="@type.ServicioId" @onchange="@((e) => handleChange(e,"servicioid"))" />
        </div>
        <button type="submit" @onclick="UpdateType">Guardar material</button>
    </form>
}

@code {
    public class Typee
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public double PrecioPorKilo { get; set; }
        public string Descripcion { get; set; }
        public int ServicioId { get; set; }
    }

    public Boolean validateValue(string value)
    {
        if (value == "")
        {
            return false;
        }
        return true;
    }

    public void handleChange(ChangeEventArgs e, string name)
    {
        string inputValue = e.Value.ToString();

        if (validateValue(inputValue))
        {
            if (name == "nombre")
            {
                type.Nombre = inputValue;
                Console.WriteLine("El valor del input ha cambiado: " + type.Nombre);
            }

            if (name == "precioporkilo3")
            {
                type.PrecioPorKilo = Double.Parse(inputValue);
                Console.WriteLine("El valor del input ha cambiado: " + type.PrecioPorKilo);
            }

            if (name == "servicioid")
            {
                type.ServicioId = Int32.Parse(inputValue);
                Console.WriteLine("El valor del input ha cambiado: " + type.ServicioId);
            }

            if (name == "descripcion3")
            {
                type.Descripcion = inputValue;
                Console.WriteLine("El valor del input ha cambiado: " + type.Descripcion);
            }            
        }
    }

    private async Task UpdateType()
    {
        var httpClient = new HttpClient();
        var content = new StringContent(JsonConvert.SerializeObject(type), Encoding.UTF8, "application/json");
        //produccion
        //var response = await httpClient.PutAsync("https://apiferrolaminas.azurewebsites.net/api/TipoCorte/" + type.Id, content);
        //desarrollo
        var response = await httpClient.PutAsync("https://localhost:7263/api/TipoCorte/" + type.Id, content);

        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
            Navigation.NavigateTo("/tipos-corte");
        }
        else
        {
        }
        StateHasChanged();
    }
}
